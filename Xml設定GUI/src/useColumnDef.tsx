import React from 'react'
import * as Layout from './__autoGenerated/collection'
import * as Util from './__autoGenerated/util'
import { AggregateOrMember, PageState } from './types'

/** グリッド列定義 */
export const useColumnDef = (
  aggregateOrMemberTypes: PageState['aggregateOrMemberTypes'],
  optionalAttributes: PageState['optionalAttributes'],
) => {
  return React.useMemo((): Layout.DataTableColumn<Util.TreeNode<AggregateOrMember>>[] => [
    // 集約名（階層構造）
    {
      id: 'col-0',
      ...textCell(
        row => row.item.displayName ?? '',
        (row, value) => {
          row.item.displayName = value
        },
      ),
      render: (row, rowIndex) => {
        return (
          <div>
            {row.item.displayName}
          </div>
        )
      },
    },
  ], [aggregateOrMemberTypes, optionalAttributes])
}

const textCell = (
  getValue: (row: Util.TreeNode<AggregateOrMember>) => string,
  setValue: (row: Util.TreeNode<AggregateOrMember>, value: string | undefined) => void
): Pick<Layout.DataTableColumn<Util.TreeNode<AggregateOrMember>>, 'editSetting' | 'onClipboardCopy'> => ({
  onClipboardCopy: getValue,
  editSetting: {
    type: 'text',
    onClipboardPaste: setValue,
    onEndEditing: setValue,
    onStartEditing: getValue,
  },
})
