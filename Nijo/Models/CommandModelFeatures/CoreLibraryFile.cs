using Nijo.Parts.WebServer;
using Nijo.Util.CodeGenerating;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Nijo.Models.CommandModelFeatures {
    /// <summary>
    /// C#のクラスライブラリに作成される、
    /// <see cref="CommandModel"/> のパラメータクラスやメソッドの抽象部分が宣言されるファイル。
    /// </summary>
    internal class CoreLibraryFile : ISummarizedFile {

        private readonly List<string> _classDeclarings = new();
        private readonly List<string> _appSrvMethods = new();
        internal void AddClassDeclaring(string sourceCode) {
            _classDeclarings.Add(sourceCode);
        }
        internal void AddApplicationServiceMethod(string sourceCode) {
            _appSrvMethods.Add(sourceCode);
        }

        void ISummarizedFile.OnEndGenerating(CodeRenderingContext context) {
            context.CoreLibrary.AutoGeneratedDir(dir => {
                dir.Generate(new SourceFile {
                    FileName = "AutoGeneratedCommands.cs",
                    RenderContent = ctx => {
                        var appSrv = new ApplicationService();

                        return $$"""
                            using System.Text.Json.Nodes;

                            namespace {{ctx.Config.RootNamespace}};

                            {{_classDeclarings.SelectTextTemplate(sourceCode => $$"""
                            {{sourceCode}}

                            """)}}
                            partial class {{appSrv.ClassName}} {
                            {{_appSrvMethods.SelectTextTemplate(sourceCode => $$"""
                                {{WithIndent(sourceCode, "    ")}}

                            """)}}
                            }
                            """;
                    },
                });
            });
        }
    }
}
