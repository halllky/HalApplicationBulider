using Nijo.Util.CodeGenerating;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace Nijo.Parts {
    /// <summary>
    /// 自動生成されるクラスライブラリに対する操作を提供します。
    /// このクラスライブラリはWebとCLIの両方から参照されます。
    /// </summary>
    internal class CoreLibrary {

        internal CoreLibrary(GeneratedProject generatedProject) {
            _generatedProject = generatedProject;
        }

        private readonly GeneratedProject _generatedProject;

        internal string ProjectRoot => Path.Combine(_generatedProject.SolutionRoot, "core");
        internal string AutoGeneratedDir => Path.Combine(ProjectRoot, "__AutoGenerated");

        /// <summary>
        /// プロジェクトディレクトリを新規作成します。
        /// </summary>
        internal void CreateProjectIfNotExists(Core.Config config) {
            if (Directory.Exists(ProjectRoot)) return;

            // 埋め込みリソースからテンプレートを出力
            var resources = new EmbeddedResource.Collection(Assembly.GetExecutingAssembly());
            foreach (var resource in resources.Enumerate("core")) {
                var destination = Path.Combine(
                    ProjectRoot,
                    Path.GetRelativePath("core", resource.RelativePath));

                Directory.CreateDirectory(Path.GetDirectoryName(destination)!);

                using var reader = resource.GetStreamReader();
                using var writer = SourceFile.GetStreamWriter(destination);
                while (!reader.EndOfStream) {
                    writer.WriteLine(reader.ReadLine());
                }
            }

            // ファイル名変更
            var beforeCsproj = Path.Combine(ProjectRoot, "NIJO_APPLICATION_TEMPLATE.csproj");
            var afterCsproj = Path.Combine(ProjectRoot, $"{config.ApplicationName}.csproj");
            File.Move(beforeCsproj, afterCsproj);

            // オーバーライド用のアプリケーションサービス具象クラスのファイルを作成
            var overridedAppSrv = new WebServer.ApplicationService();
            var overrideAppSrv = Path.Combine(ProjectRoot, overridedAppSrv.ConcreteClassFileName);
            File.WriteAllText(overrideAppSrv, overridedAppSrv
                .RenderConcreteClass(config)
                /// TODO: <see cref="DirectorySetupper.Generate(SourceFile)"/> を使用していないのでわざわざ置換する必要がある
                .Replace(SKIP_MARKER, string.Empty));
        }
    }
}
