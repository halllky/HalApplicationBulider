using Nijo.Util.CodeGenerating;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Nijo.Parts.WebClient {
    internal class MenuTsx {

        internal static SourceFile Render(CodeRenderingContext context) => new SourceFile {
            FileName = "autogenerated-menu.tsx",
            RenderContent = context => $$"""
                import React from 'react'
                import { RouteObject } from 'react-router-dom'
                {{context.ReactProject.Pages.SelectTextTemplate(page => $$"""
                import {{page.ComponentPhysicalName}} from './{{ReactProject.PAGES}}/{{page.DirNameInPageDir}}/{{Path.GetFileNameWithoutExtension(page.GetSourceFile().FileName)}}'
                """)}}

                export const THIS_APPLICATION_NAME = '{{context.Schema.ApplicationName}}' as const

                export const routes: RouteObject[] = [
                {{context.ReactProject.Pages.SelectTextTemplate(page => $$"""
                  { path: '{{page.Url}}', element: <{{page.ComponentPhysicalName}} /> },
                """)}}
                ]

                export type SideMenuItem = {
                  url: string
                  text: React.ReactNode
                  icon?: React.ElementType
                  children?: SideMenuItem[]
                }
                export const menuItems: SideMenuItem[] = [
                {{context.ReactProject.Pages.Where(p => p.ShowMenu).SelectTextTemplate(page => $$"""
                  { url: '{{page.Url}}', text: '{{page.LabelInMenu?.Replace("'", "\\'")}}' },
                """)}}
                ]

                export const SHOW_LOCAL_REPOSITORY_MENU = {{(context.Config.DisableLocalRepository ? "false" : "true")}}
                """,
        };
    }
}
