using Nijo.Util.CodeGenerating;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Nijo.Parts.WebClient {
    /// <summary>
    /// 自動生成される入力コンポーネント。
    /// 特に必要性はないが全部1か所にまとめている。
    /// </summary>
    internal class AutoGeneratedComponents : ISummarizedFile {

        private readonly List<string> _sourceCode = new();
        internal void Add(string source) {
            _sourceCode.Add(source);
        }

        void ISummarizedFile.OnEndGenerating(CodeRenderingContext context) {
            context.ReactProject.AutoGeneratedDir(dir => {
                dir.Generate(Render());
            });
        }

        private SourceFile Render() => new SourceFile {
            FileName = "autogenerated-components.tsx",
            RenderContent = ctx => {
                return $$"""
                    import React, { useState, useMemo, useCallback, useRef, useReducer, useImperativeHandle } from 'react'
                    import useEvent from 'react-use-event-hook'
                    import { FormProvider, useWatch } from 'react-hook-form'
                    import * as Icon from '@heroicons/react/24/outline'
                    import { Panel, PanelGroup, PanelResizeHandle, ImperativePanelHandle } from 'react-resizable-panels'
                    import * as Util from './util'
                    import * as Input from './input'
                    import * as Layout from './collection'
                    import * as Types from './autogenerated-types'
                    import * as Hooks from './autogenerated-hooks'
                    import { useCustomizerContext } from './autogenerated-customizer'

                    const VForm2 = Layout.VForm2

                    {{_sourceCode.SelectTextTemplate(source => $$"""

                    {{source}}
                    """)}}
                    """;
            },
        };
    }
}
