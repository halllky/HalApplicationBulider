<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>


<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

namespace <#=_config.MvcControllerNamespace#> {
    using System;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.Extensions.Logging;
    
<# foreach (var rootAggregate in _rootAggregates) { #>
<# var controller = rootAggregate.ToController(); #>
    public partial class <#=controller.ClassName#> : <#=typeof(Runtime.AspNetMvc.ControllerBase<Runtime.SearchConditionBase, Runtime.SearchResultBase, Runtime.UIInstanceBase>).FullName#> {
        public <#=controller.ClassName#>(IServiceProvider services) : base(services) {}
    
        protected override string MultiViewName => "<#=GetMultiViewName(rootAggregate)#>";
        protected override string CreateViewName => "<#=GetCreateViewName(rootAggregate)#>";
        protected override string SingleViewName => "<#=GetSingleViewName(rootAggregate)#>";
    }
<# } #>
}