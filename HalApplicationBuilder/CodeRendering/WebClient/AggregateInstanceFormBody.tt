<#@ template language="C#" linePragmas="false" #>
<#@ output encoding="utf-8" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="HalApplicationBuilder.Core" #>
<#@ import namespace="HalApplicationBuilder.DotnetEx" #>
<# foreach (var prop in _instance.GetProperties(_ctx.Config)) { #>
<# if (prop is AggregateInstance.SchalarProperty schalarProperty) { #>
<div className="flex">
  <div className="<#=PropNameWidth#>">
    <span className="text-sm select-none opacity-80">
      <#=prop.PropertyName#>
    </span>
  </div>
  <div className="flex-1">
<# PushIndent("    "); #>
<# RenderSchalarProperty(schalarProperty); #>
<# PopIndent(); #>
  </div>
</div>

<# } else if (prop is AggregateInstance.RefProperty refProperty) { #>
<div className="flex">
  <div className="<#=PropNameWidth#>">
    <span className="text-sm select-none opacity-80">
      <#=prop.PropertyName#>
    </span>
  </div>
  <div className="flex-1">
<# PushIndent("    "); #>
<# RenderRefAggregateBody(refProperty); #>
<# PopIndent(); #>
  </div>
</div>

<# } else if (prop is AggregateInstance.ChildProperty childProperty) { #>
<div className="py-2">
  <span className="text-sm select-none opacity-80">
    <#=prop.PropertyName#>
  </span>
  <div className="flex flex-col space-y-1 p-1 border border-neutral-400">
<# PushIndent("    "); #>
<# RenderChildAggregateBody(childProperty); #>
<# PopIndent(); #>
  </div>
</div>

<# } else if (prop is AggregateInstance.VariationProperty variationProperty
              && variationProperty.Key == variationProperty.Group.VariationAggregates.First().Key) { #>
<div className="flex">
  <div className="<#=PropNameWidth#>">
    <span className="text-sm select-none opacity-80">
      <#=variationProperty.Group.GroupName#>
    </span>
  </div>
  <div className="flex-1 flex gap-2 flex-wrap">
<# foreach (var item in variationProperty.Group.VariationAggregates) { #>
    <label>
      <input type="radio" value="<#=item.Key#>" {...register(`<#=GetRegisterName(variationProperty.Group.GroupName.ToCSharpSafe())#>`)} />
      <#=item.Value.RelationName#>
    </label>
<# } #>
  </div>
</div>
<# foreach (var item in variationProperty.Group.VariationAggregates) { #>
<div className={`flex flex-col space-y-1 p-1 border border-neutral-400 ${(watch(`<#=GetRegisterName(variationProperty.Group.GroupName.ToCSharpSafe())#>`) !== '<#=item.Key#>' ? 'hidden' : '')}`}>
<# PushIndent("  "); #>
<# RenderVariationAggregateBody(item.Value.Terminal); #>
<# PopIndent(); #>
</div>
<# } #>

<# } else if (prop is AggregateInstance.ChildrenProperty childrenProperty) { #>
<div className="py-2">
  <span className="text-sm select-none opacity-80">
    <#=prop.PropertyName#>
  </span>
  <div className="flex flex-col space-y-1 p-1">
<# PushIndent("    "); #>
<# RenderChildrenAggregateBody(childrenProperty); #>
<# PopIndent(); #>
  </div>
</div>

<# } #>
<# } #>
