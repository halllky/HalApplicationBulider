<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace <#=_ctx.Config.DbContextNamespace#> {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;

    partial class <#=_ctx.Config.DbContextName#> {
<# foreach (var method in BuildSearchMethods()) { #>
        public <#=method.ReturnType#> <#=method.MethodName#>(<#=method.ArgType#> <#=PARAM#>) {
            var <#=QUERY#> = this.<#=method.DbSetName#>.Select(<#=E#> => new {
<# foreach (var line in method.SelectClause()) { #>
                <#=line#>
<# } #>
            });

<# foreach (var line in method.WhereClause()) { #>
            <#=line#>
<# } #>

            if (<#=PARAM#>.<#=PAGE#> != null) {
                const int PAGE_SIZE = 20;
                var skip = <#=PARAM#>.<#=PAGE#>.Value * PAGE_SIZE;
                <#=QUERY#> = <#=QUERY#>.Skip(skip).Take(PAGE_SIZE);
            }

            return <#=QUERY#>.AsEnumerable().Select(<#=E#> => new <#=method.ReturnItemType#> {
<# foreach (var line in method.EnumerableSection()) { #>
                <#=line#>
<# } #>
            });
        }
<# } #>
    }
}
