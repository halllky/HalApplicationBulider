<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace <#=_ctx.Config.DbContextNamespace#> {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Infrastructure;

    partial class <#=_ctx.Config.DbContextName#> {
<# foreach (var method in BuildSearchMethods()) { #>
        public <#=method.ReturnType#> <#=method.MethodName#>(<#=method.ArgType#> param) {
            var query = this.<#=method.DbSetName#>.Select(e => new <#=method.ReturnItemType#> {
<# foreach (var line in method.SelectClause) { #>
                <#=line#>
<# } #>
            });

<# foreach (var line in method.WhereClause) { #>
            <#=line#>
<# } #>

            var page = param.GetPageObject();
            query = query
                .Skip(page.<#=nameof(DotnetEx.Page.SqlOffset)#>)
                .Take(page.<#=nameof(DotnetEx.Page.SqlLimit)#>);

            var runtimeService = this.GetService<HalApplicationBuilder.RuntimeService>()!;
            runtimeService.AppendInstanceKey(query);
            runtimeService.AppendInstanceName(query);
            return query;
        }
<# } #>
    }
}
