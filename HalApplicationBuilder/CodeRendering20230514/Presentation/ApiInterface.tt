<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="HalApplicationBuilder.Core20230514" #>

#pragma warning disable CS8618 // null 非許容の変数には、コンストラクターの終了時に null 以外の値が入っていなければなりません
#pragma warning disable IDE1006 // 命名スタイル

namespace <#=_ctx.Config.RootNamespace#> {
    using System;
    using System.Collections.Generic;

<# foreach (var dbEntity in _ctx.Schema.ToEFCoreGraph()) { #>
<# var searchCondition = new SearchCondition(dbEntity); #>
<# var searchResult = new SearchResult(dbEntity); #>
<# var aggregateInstance = new AggregateInstance(dbEntity); #>

<# /* 検索条件DTO */ #>
    public class <#=searchCondition.ClassName#> : <#=SearchCondition.BASE_CLASS_NAME#> {
<# foreach (var prop in searchCondition.GetMembers()) { #>
        public <#=prop.Type.GetCSharpTypeName()#> <#=prop.Name#> { get; set; }
<# }#>
    }

<# /* 検索結果DTO */ #>
    public class <#=searchResult.ClassName#> : <#=SearchResult.BASE_CLASS_NAME#> {
<# foreach (var prop in searchResult.GetMembers()) { #>
        public <#=prop.Type.GetCSharpTypeName()#> <#=prop.Name#> { get; set; }
<# }#>
    }

<# /* シングルビューDTO */ #>
    public class <#=aggregateInstance.ClassName#> : <#=AggregateInstance.BASE_CLASS_NAME#> {
<# foreach (var prop in aggregateInstance.GetMembers()) { #>
        public <#=prop.CSharpTypeName#> <#=prop.PropertyName#> { get; set; }
<# }#>

        public <#=_ctx.Config.EntityNamespace#>.<#=dbEntity.Item.ClassName#> <#=AggregateInstance.TO_DB_ENTITY_METHOD_NAME#>() {
<# PushIndent("            "); #>
<# ToDbEntity(dbEntity); #>
<# PopIndent(); #>
        }

        public static <#=aggregateInstance.ClassName#> <#=AggregateInstance.FROM_DB_ENTITY_METHOD_NAME#>(<#=_ctx.Config.EntityNamespace#>.<#=dbEntity.Item.ClassName#> <#=E#>) {
<# PushIndent("            "); #>
<# FromDbEntity(dbEntity); #>
<# PopIndent(); #>
        }
    }
<# }#>

}
