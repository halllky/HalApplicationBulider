<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

namespace <#=DbContextNamespace#> {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using Microsoft.EntityFrameworkCore;

    partial class <#=DbContextName#> {

<# foreach (var item in SearchMethods) { #>
        public IEnumerable<<#=item.SearchResultClassName#>> <#=item.MethodName#>(<#=item.SearchConditionClassName#> <#=item.Arg#>) {
            var <#=item.Query#> = this.<#=item.DbSetName#>.Select(<#=item.E#> => new <#=item.SearchResultClassName#> {
<# foreach (var line in item.GetSelectClause()) { #>
                <#=line#>
<# } #>
            });

<# foreach (var line in item.GetWhereClause()) { #>
            <#=line#>
<# } #>

            var page = <#=item.Arg#>.GetPageObject();
            <#=item.Query#> = <#=item.Query#>.Skip(page.<#=nameof(DotnetEx.Page.SqlOffset)#>).Take(page.<#=nameof(DotnetEx.Page.SqlLimit)#>);

            return <#=item.Query#>.AsEnumerable();
        }
<# } #>

    }
}