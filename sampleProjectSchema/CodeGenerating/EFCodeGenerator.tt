<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace haldoc {
    using Microsoft.EntityFrameworkCore;

    partial class DynamicDbContext {
    
<# /* DbSetプロパティの生成 */ #>
<# foreach (var entity in GetEntityDefs()) { #>
        public DbSet<haldoc.AutoGenerated.Entities.<#=entity.TableName#>> <#=entity.TableName#> { get; set; }
<# }#>

<# /* OnModelCreatingの定義 */ #>
        protected override void OnModelCreating(ModelBuilder modelBuilder) {
<# foreach (var entity in GetEntityDefs()) { #>
            modelBuilder.Entity<haldoc.AutoGenerated.Entities.<#=entity.TableName#>>()
                .HasKey(e => new {
<# foreach (var prop in entity.Keys) { #>
                    e.<#=prop.ColumnName#>,
<# }#>
                });
<# }#>
        }
    }
}

namespace haldoc.AutoGenerated.Entities {

<# /*Entityクラスの生成*/ #>
<# foreach (var entity in GetEntityDefs()) { #>
    public partial class <#=entity.TableName#> {
<# /*Entityクラスの生成: プロパティ*/ #>
<# foreach (var prop in entity.Keys.Concat(entity.NonKeyProps)) { #>
        public <#=prop.TypeName#> <#=prop.ColumnName#> { get; set; }
<# }#>
    }
<# }#>

}