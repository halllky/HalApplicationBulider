<#@ template language="C#" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace <#=Context.GetOutputNamespace(haldoc.Core.E_Namespace.DbContext)#> {
    using Microsoft.EntityFrameworkCore;

    partial class DynamicDbContext {
    
<# /* DbSetプロパティの生成 */ #>
<# foreach (var entity in Context.EnumerateAllAggregates().Select(a => a.ToDbTableModel())) { #>
        public DbSet<<#=Context.GetOutputNamespace(haldoc.Core.E_Namespace.DbEntity)#>.<#=entity.ClassName#>> <#=entity.ClassName#> { get; set; }
<# }#>

<# /* OnModelCreatingの定義 */ #>
        protected override void OnModelCreating(ModelBuilder modelBuilder) {
<# foreach (var aggregate in Context.EnumerateAllAggregates()) { #>
            modelBuilder.Entity<<#=Context.GetOutputNamespace(haldoc.Core.E_Namespace.DbEntity)#>.<#=aggregate.ToDbTableModel().ClassName#>>()
                .HasKey(e => new {
<# foreach (var prop in aggregate.GetDbTablePK()) { #>
                    e.<#=prop.PropertyName#>,
<# }#>
                });
<# }#>
        }
    }
}

namespace <#=Context.GetOutputNamespace(haldoc.Core.E_Namespace.DbEntity)#> {
    using System.Collections.Generic;

<# /*Entityクラスの生成*/ #>
<# foreach (var entity in Context.EnumerateAllAggregates().Select(a => a.ToDbTableModel())) { #>
    public partial class <#=entity.ClassName#> {
<# /*Entityクラスの生成: プロパティ*/ #>
<# foreach (var prop in entity.Properties) { #>
        public <#=prop.CSharpTypeName#> <#=prop.PropertyName#> { get; set; }<#=prop.Initializer == null ? "" : $" = {prop.Initializer};"#>
<# }#>
    }
<# }#>

}