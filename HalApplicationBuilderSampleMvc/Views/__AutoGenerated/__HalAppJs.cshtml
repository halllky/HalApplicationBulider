
<script>
    const setHalappFunctions = targetElementJQueryObject => {
        targetElementJQueryObject.find('.halapp-add-child').on('click', event => {
            const controllerName = '@(Context.Request.RouteValues["controller"].ToString())';
            const button = $(event.target);
            const aggregateTreePath = button.attr('halapp-aggregate-tree-path');
            const modelPath = button.attr('halapp-aggregate-model-path');
            const currentArrayCount = button.siblings().length;
            $.ajax({
                type: 'GET',
                url: `/${controllerName}/NewChild`,
                data: {
                    aggregateTreePath,
                    modelPath,
                    currentArrayCount,
                },
            }).then((data, textStatus, jqXHR) => {
                const partialView = $($.parseHTML(data));
                partialView.insertBefore(button);
                setHalappFunctions(partialView);
            }).catch(err => {
                console.trace('ERROR!!', err);
            });
        });
        
        targetElementJQueryObject.find('.halapp-remove-button').on('click', event => {
            const button = $(event.target);
            const hiddenField = button.siblings('.halapp-removed');
            hiddenField.val('true');
            button.parent().css('display', 'none');
        });
        
        targetElementJQueryObject.find('.halapp-autocomplete').each((_, el) => {
            const element = $(el);
            element.autocomplete({
                minLength: 0, @* 0文字入力以上でサジェスチョン有効 *@
                source: ({ term }, response) => {
                    const controllerName = '@(Context.Request.RouteValues["controller"].ToString())';
                    const aggregateGuid = element.siblings('.halapp-aggregate-guid').val();
                    $.ajax({
                        type: 'GET',
                        url: `/${controllerName}/Autocomplete`,
                        data: { aggregateGuid, term },
                    }).done(data => {
                        response(data);
                    }).fail(res => {
                        console.error(res.responseJSON); // TODO エラーハンドリング
                        response([]);
                    });
                },
                @* 矢印キー上下で選択肢を移動したときに発火 *@
                focus: (event, ui) => {
                    const hiddenField = element.siblings('.halapp-autocomplete-value');
                    $(event.target).val(ui.item.label);
                    hiddenField.val(ui.item.value);
                    return false; @* input(text)にvalueでなくlabelを表示するため既定の処理を殺す *@
                },
                @* 選択確定時に発火 *@
                select: (event, ui) => {
                    const hiddenField = element.siblings('.halapp-autocomplete-value');
                    $(event.target).val(ui.item.label);
                    hiddenField.val(ui.item.value);
                    return false; @* input(text)にvalueでなくlabelを表示するため既定の処理を殺す *@
                },
            });
        });
    }
        
    setHalappFunctions($(document));
    
    // const formFooter = $('#halapp-single-view-form-footer');
    // const form = $('#halapp-single-view-form');
</script>