import React from 'react'
import * as Icon from '@heroicons/react/24/solid'
import * as Util from '../__autoGenerated/util'
import * as Input from '../__autoGenerated/input'
import * as Layout from '../__autoGenerated/collection'
import useEvent from 'react-use-event-hook'

export default function () {

  const [dark, setDark] = React.useState<boolean | undefined>(false)
  const [text, setText] = React.useState<string | undefined>('これはボタンのサンプルです')

  // ボタンのオプションのパターンを機械的に生成する
  const patterns = React.useMemo((): IconButtonSampleProp[] => {
    return Array.from({ length: 2 ** 7 }).map((_, i) => {

      // デシジョンテーブルで言うところのtrue/falseを計算する
      const getTrueFalse = (power: number) => {
        return (i % (2 ** power)) < (2 ** (power - 1))
      }

      return {
        text,
        hideText: getTrueFalse(7),
        loading: getTrueFalse(6),
        showIcon: getTrueFalse(5),
        fill: getTrueFalse(4),
        outline: getTrueFalse(3),
        underline: getTrueFalse(2),
        mini: getTrueFalse(1),
      }
    })
  }, [text])

  return (
    <div className={`flex p-1 relative ${dark ? 'dark bg-color-8' : ''}`}>
      <div className="grid grid-cols-[12rem_repeat(7,minmax(0,1fr))] gap-1">
        <div className="font-bold sticky top-1 bg-color-base z-10">
          <Input.CheckBox label="ダークモード" value={dark} onChange={setDark} />
        </div>
        <span className="font-bold sticky top-1 bg-color-base">hideText</span>
        <span className="font-bold sticky top-1 bg-color-base">loading</span>
        <span className="font-bold sticky top-1 bg-color-base">showIcon</span>
        <span className="font-bold sticky top-1 bg-color-base">fill</span>
        <span className="font-bold sticky top-1 bg-color-base">outline</span>
        <span className="font-bold sticky top-1 bg-color-base">underline</span>
        <span className="font-bold sticky top-1 bg-color-base">mini</span>
        {patterns.map((p, i) => (
          <IconButtonSample key={i} {...p} />
        ))}
      </div>
    </div>
  )
}

type IconButtonSampleProp = {
  text: string | undefined
  fill: boolean
  outline: boolean
  hideText: boolean
  underline: boolean
  mini: boolean
  loading: boolean
  showIcon: boolean
}
const IconButtonSample = (props: IconButtonSampleProp) => {
  const { text, showIcon, ...rest } = props
  const handleClick = useEvent(() => {
    alert('ボタンが押されました')
  })

  return (
    <>
      <div>
        <Input.IconButton
          {...rest}
          icon={showIcon ? Icon.Battery50Icon : undefined}
          onClick={handleClick}
        >
          {text}
        </Input.IconButton>
      </div>
      <span>{props.hideText ? '✓' : '-'}</span>
      <span>{props.loading ? '✓' : '-'}</span>
      <span>{props.showIcon ? '✓' : '-'}</span>
      <span>{props.fill ? '✓' : '-'}</span>
      <span>{props.outline ? '✓' : '-'}</span>
      <span>{props.underline ? '✓' : '-'}</span>
      <span>{props.mini ? '✓' : '-'}</span>
    </>
  )
}
