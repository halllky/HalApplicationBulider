using Nijo.Core;
using Nijo.Util.DotnetEx;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Nijo.IntegrationTest.Tests {
    partial class 観点 {
        [UseDataPatterns]
        public async Task コンパイルエラーチェック(DataPattern pattern) {
            try {
                // 自動生成コードの更新
                File.WriteAllText(TestProject.Current.SchemaXml.GetPath(), pattern.LoadXmlString());
                TestProject.Current.CodeGenerator.UpdateAutoGeneratedCode();

                // dotnet build, npm tsc による確認
                using var ct = new CancellationTokenSource();
                await TestProject.Current.Debugger.BuildAsync(ct.Token, GeneratedProjectDebugger.E_NpmBuild.OnlyCompilerCheck);

            } catch (Exception ex) {
                TestContext.Out.WriteLine("--- SCHEMA ---");
                TestContext.Out.WriteLine(TestProject.Current.BuildSchema().Graph.ToMermaidText());
                Assert.Fail(ex.Message);
            }
        }
    }
}
