<?xml version="1.0" encoding="utf-8" ?>

<自動テストで作成されたプロジェクト>

  <!--
    想定シナリオ
    1. 外部システムから連携されたCSVを取り込む
    2. このシステムのデータ構造に従って取り込んだデータの変換を行う
    3. 変換後のデータを登録する
  -->

  <従業員 is="write-model-2 generate-default-read-model">
    <内部ID is="uuid key" />
    <従業員コード is="word" />
    <名前 is="name" />
    <区分 is="従業員区分" />
  </従業員>

  <従業員区分 is="enum">
    <ベテラン />
    <ビギナー />
  </従業員区分>

  <従業員データ一括取り込み is="command">

    <取込ファイル is="word" />
    <!-- <取込ファイル is="file" /> -->

    <処理範囲 is="variation">
      <特定データのみ is="variation-key:1">
        <従業員 is="ref-to:従業員" />
      </特定データのみ>
      <全部更新 is="variation-key:2" />
    </処理範囲>
  </従業員データ一括取り込み>

  <ReplaceOverridedApplicationServiceCodeForUnitTest>
    public override ICommandResult Execute従業員データ一括取り込み(従業員データ一括取り込みParameter param, ICommandResultGenerator&lt;従業員データ一括取り込みParameterErrorMessages&gt; result, bool ignoreConfirm) {
    if (param.処理範囲 == E_処理範囲.特定データのみ) {
    if (param.特定データのみ?.従業員?.内部ID == null) {
    return result.Error("対象の従業員が指定されていません。");
    }
    var searchResult = Load従業員(new() {
    Filter = new() {
    内部ID = param.特定データのみ.従業員.内部ID,
    },
    Skip = 0,
    Take = 1,
    }).ToArray();

    if (searchResult.Length == 0) {
    return result.Error("従業員データが見つかりません。");
    }

    var displayData = searchResult[0];
    displayData.Values.名前 += "あ"; // リダイレクト先の編集画面では、名前を書き換えた状態の初期値が表示される
    return result.Redirect(displayData, E_SingleViewType.Edit, E_RefetchType.Overwrite);

    } else {
    return result.Ok(new {
    Title = "これは詳細情報です",
    param,
    });

    //// テキストファイルの内容を生成
    //var content = "これはテキストファイルの内容です。\n行1\n行2\n行3";
    //var bytes = Encoding.UTF8.GetBytes(content);

    //// Fileメソッドを使用してファイルを返す
    //return result.File(bytes, "text/plain");
    }
    }
  </ReplaceOverridedApplicationServiceCodeForUnitTest>
</自動テストで作成されたプロジェクト>
