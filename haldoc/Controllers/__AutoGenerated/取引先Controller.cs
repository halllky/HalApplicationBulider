

namespace haldoc.AutoGenerated.Mvc {
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    
    public class 取引先Controller : Controller {
        public 取引先Controller(haldoc.Core.ProjectContext context) {
            _projectContext = context;
        }
        private readonly haldoc.Core.ProjectContext _projectContext;
        
        public IActionResult List(Guid aggregateId) {
            var actionResult = _projectContext.MapToListView(aggregateId);
            if (actionResult == null) return NotFound();
            return View(actionResult.View, actionResult.Model);
        }
        public IActionResult ClearSearchCondition(haldoc.Runtime.ListViewModel<取引先__SearchCondition, 取引先__ListItem> model) {
            throw new NotImplementedException();
        }
        public IActionResult ExecuteSearch(haldoc.Runtime.ListViewModel<取引先__SearchCondition, 取引先__ListItem> model) {
            throw new NotImplementedException();
        }
        
        public IActionResult Create(Guid aggregateId) {
            var actionResult = _projectContext.MapToCreateView(aggregateId);
            if (actionResult == null) return NotFound();
            return View(actionResult.View, actionResult.Model);
        }
        [HttpPost]
        public IActionResult SaveNewInstance(haldoc.Runtime.SingleViewModel<取引先> model) {
            var actionResult = _projectContext.SaveNewInstance(model);
            if (actionResult.Errors.Any()) {
                foreach (var error in actionResult.Errors.SelectMany(e => e.MemberNames, (e, Member) => new { Member, e.ErrorMessage })) {
                    ModelState.AddModelError(error.Member, error.ErrorMessage);
                }
            }
            return View(actionResult.View, actionResult.Model);
        }
        
        public IActionResult Single(Guid aggregateId) {
            throw new NotImplementedException();
        }
    }
}